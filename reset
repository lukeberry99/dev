#!/usr/bin/env bash

set -euo pipefail

# Colors
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly MAGENTA='\033[0;35m'
readonly NC='\033[0m'

usage() {
    cat << EOF

Usage: $(basename "$0") [OPTIONS]

Does a hard reset - removing all tools currently installed by brew, brew itself, and neovim.

Options:
    --dry           Dry run mode - show what would be executed without running
    --help, -h      Show this help message
    --verbose, -v   Show output from all scripts

Example:
    ./$(basename "$0") --dry
    ./$(basename "$0") --verbose
    ./$(basename "$0")
EOF
}

log() {
    local level=$1
    shift
    local message="$*"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    case "$level" in
        "INFO")
            echo -e "${GREEN}[INFO]${NC} ${timestamp} - $message"
            ;;
        "WARN")
            echo -e "${YELLOW}[WARN]${NC} ${timestamp} - $message"
            ;;
        "ERROR")
            echo -e "${RED}[ERROR]${NC} ${timestamp} - $message" >&2
            ;;
        "DEBUG")
            if [[ ${VERBOSE} -eq 1 ]]; then
                echo -e "${BLUE}[DEBUG]${NC} ${timestamp} - $message"
            fi
            ;;
    esac
}

delete_items() {
    local dry_run=$1

    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "[DRY RUN] Would remove ~/neovim directory"
    else
        log "INFO" "Removing ~/neovim directory..."
        rm -rf ~/neovim
    fi

    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "[DRY RUN] Would remove Neovim binary at /usr/local/bin"
    else
        log "INFO" "Removing Neovim binary at /usr/local/bin..."
        sudo rm -f /usr/local/bin/nvim
    fi

    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "[DRY RUN] Would remove Neovim cache at ~/.local/state/nvim"
    else
        log "INFO" "Removing Neovim cache at ~/.local/state/nvim..."
        rm -rf ~/.local/state/nvim
    fi

    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "[DRY RUN] Would remove Neovim share at ~/.local/share/nvim"
    else
        log "INFO" "Removing Neovim share at ~/.local/share/nvim..."
        rm -rf ~/.local/share/nvim
    fi

    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "[DRY RUN] Would remove ~/.config directory"
    else
        log "INFO" "Removing ~/.config directory..."
        rm -rf ~/.config
    fi

    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "[DRY RUN] Would remove ~/.zshrc file"
    else
        log "INFO" "Removing ~/.zshrc file..."
        rm -f ~/.zshrc
    fi

    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "[DRY RUN] Would remove ~/.zprofile file"
    else
        log "INFO" "Removing ~/.zprofile file..."
        rm -f ~/.zprofile
    fi

    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "[DRY RUN] Would uninstall all Homebrew packages"
    else
        log "INFO" "Uninstalling all Homebrew packages..."
        brew list | xargs brew uninstall --force
    fi

    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "[DRY RUN] Would uninstall Homebrew itself"
    else
        log "INFO" "Uninstalling Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
    fi
}

main() {
    echo -e "${MAGENTA}"
    cat << "EOF"
╔════════════════════════════════════════════╗
║               HARD RESET                   ║
║         ----------------------             ║
║    🔥 I hope you meant to run this :)      ║
╚════════════════════════════════════════════╝
EOF
    echo -e "${NC}"

    local dry_run=0
    local verbose=${VERBOSE:-0}

    while [[ $# -gt 0 ]]; do
        case "$1" in
            --dry)
                dry_run=1
                ;;
            --help|-h)
                usage
                exit 0
                ;;
            --verbose|-v)
                verbose=1
                export VERBOSE=1
                ;;
            *)
                log "ERROR" "Unexpected argument: $1"
                usage
                exit 1
                ;;
        esac
        shift
    done

    delete_items $dry_run


    if [[ $dry_run -eq 1 ]]; then
        log "INFO" "Dry run completed. No changes were made."
    else
        log "INFO" "Deletion process completed successfully!"
    fi
}

main "$@"
