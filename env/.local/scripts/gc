#!/usr/bin/env bash

# Function to parse the git URL and return the directory path
parse_git_url() {
    local url="$1"
    local domain
    local org
    local repo

    # Remove the protocol (https:// or ssh://)
    url="${url#*://}"

    # For SSH URLs, replace ':' with '/' to handle the domain correctly
    url=$(echo "$url" | sed 's/:/\//')

    # Remove the username@ part if present
    url="${url#*@}"

    # Extract the domain, organization, and repository name
    domain=$(echo "$url" | cut -d'/' -f1)
    org=$(echo "$url" | cut -d'/' -f2)
    repo=$(echo "$url" | cut -d'/' -f3)

    # Remove the .git suffix only if it is present
    if [[ "$repo" == *.git ]]; then
        repo="${repo%.git}"
    fi

    echo "$domain/$org/$repo"
}

clone_repo() {
    local input="$1"
    local base_dir="$HOME/repos"
    local dir_path
    local url

    # Extract the last argument as the URL
    url=$(echo "$input" | awk '{print $NF}')

    dir_path=$(parse_git_url "$url")

    # Create directory if it doesn't exist
    mkdir -p "$base_dir/$dir_path"

    # Clone the repository
    git clone "$url" "$base_dir/$dir_path"

    # Output the directory where it was cloned
    echo "Cloned into: $base_dir/$dir_path"
}

# Check if a git URL is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <git-url>"
    exit 1
fi

clone_repo "$*"
